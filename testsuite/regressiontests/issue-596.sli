/*
 *  issue-596.sli
 *
 *  This file is part of NEST.
 *
 *  Copyright (C) 2004 The NEST Initiative
 *
 *  NEST is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  NEST is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with NEST.  If not, see <http://www.gnu.org/licenses/>.
 *
 */


 /** @BeginDocumentation
Name: testsuite::issue-565

Synopsis: (issue-565) run -> NEST exits if test fails

Description:
This test makes sure that after deleting a connection in a
heterogenenous connector, the resulting connector can still be
correctly used to deliver spikes

Author: Jakob Jordan
FirstVersion: December 2016
SeeAlso:
*/

(unittest) run
/unittest using

/BuildNetwork
{
  ResetKernel

  % Create neurons and spike detector
  /iaf_psc_delta 2 Create /neurons Set
  /spike_detector 1 Create /sd Set

  % Get neuron one to continously spike
  neurons [1] Take << /I_e 600. >> SetStatus

  % Create connections, need to be of different types to create
  % heterogenenous connector
  neurons [1] Take neurons [2] Take << /rule /all_to_all >>
    << /weight 0. /synapse_model /static_synapse >> Connect
  neurons [1] Take neurons [2] Take << /rule /all_to_all >>
    << /weight 0. /synapse_model /stdp_synapse >> Connect

  % Create connection to spike detector
  neurons [1] Take sd Connect
} def

% Measure event count without deleting connection (ground truth)
BuildNetwork

100 Simulate

sd /n_events get /n_events_target Set

% Measure event count with deleting connection
BuildNetwork

neurons [1] Take neurons [2] Take << /rule /all_to_all >>
  << /synapse_model /static_synapse >> Disconnect_g_g_D_D

100 Simulate

{
  sd /n_events get n_events_target eq
} assert_or_die
